name: Transaction Challenge API Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Print env vars
        run: printenv | grep JWT

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Build Docker Image
        run: docker build -t transaction-challenge .

      - name: Configure Artifact Registry Auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Tag and Push Docker Image
        run: |
          docker tag transaction-challenge ${{ secrets.REGISTRY_INFO }}/transaction-challenge:latest
          docker tag transaction-challenge ${{ secrets.REGISTRY_INFO }}/transaction-challenge:${{ github.run_id }}

          docker push ${{ secrets.REGISTRY_INFO }}/transaction-challenge:latest
          docker push ${{ secrets.REGISTRY_INFO }}/transaction-challenge:${{ github.run_id }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy transaction-challenge \
            --image=${{ secrets.REGISTRY_INFO }}/transaction-challenge:latest \
            --platform=managed \
            --region=${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --add-cloudsql-instances=${{ secrets.SQL_INSTANCE_CONNECTION_NAME }} \
            --set-env-vars=DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_URL=${{ secrets.DB_URL }},DB_USERNAME=${{ secrets.DB_USERNAME }},DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }},ENVIRONMENT=${{ secrets.ENVIRONMENT }},GCP_REGION=${{ secrets.GCP_REGION }},GOOGLE_CREDENTIALS=${{ secrets.GOOGLE_CREDENTIALS }},JWT_SECRET=${{ secrets.JWT_SECRET }},PROJECT_ID=${{ secrets.PROJECT_ID }},REGISTRY_INFO=${{ secrets.REGISTRY_INFO }},INSTANCE_CONNECTION_NAME=${{ secrets.INSTANCE_CONNECTION_NAME }}
              
      
